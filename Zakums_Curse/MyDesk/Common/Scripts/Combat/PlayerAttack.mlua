@Component
script PlayerAttack extends AttackComponent

	@HideFromInspector
	property any Shape = nil

	@ExecSpace("ServerOnly")
	method void OnBeginPlay()
		self.Shape = BoxShape(Vector2.zero, Vector2.one, 0)
	end

	@ExecSpace("ServerOnly")
	method void AttackNormal()
		local playerController = self.Entity.PlayerControllerComponent
		local transform = self.Entity.TransformComponent
		if playerController and transform then
			local worldPosition = transform.WorldPosition
			local attackOffset = Vector2(worldPosition.x + 0.5 * playerController.LookDirectionX, worldPosition.y + 0.5)
			self.Shape.Position = attackOffset
			
			self:AttackFast(self.Shape, nil, CollisionGroups.Player)
		end
	end

	method int CalcDamage(Entity attacker, Entity defender, string attackInfo)
		return 50
	end

	method boolean CalcCritical(Entity attacker, Entity defender, string attackInfo)
		return _UtilLogic:RandomDouble() < 0.3
	end

	method number GetCriticalDamageRate()
		return 2
	end

	@ExecSpace("ServerOnly")
	@EventSender("Self")
	handler HandlePlayerActionEvent(PlayerActionEvent event)
		-- Parameters
		local ActionName = event.ActionName
		-- local PlayerEntity = event.PlayerEntity
		--------------------------------------------------------
		
		if ActionName == "Attack" then
			self:AttackNormal()
		end
	end

end